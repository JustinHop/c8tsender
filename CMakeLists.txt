cmake_minimum_required(VERSION 3.15)
#SET(CMAKE_FIND_LIBRARY_PREFIXES "")
set(CMAKE_FIND_LIBRARY_PREFIXES lib)
set(CMAKE_FIND_LIBRARY_SUFFIXES ".so;.a")
find_library(PROTOBUF_LIBRARY libprotobuf /usr/lib)
find_library(MICROHTTPD_LIBRARY libmicrohttpd /usr/lib)
include(FindOpenSSL)
set(CMAKE_CXX_FLAGS " -Wno-deprecated-declarations")
#set(CMAKE_CXX_STANDARD "c++11")
#SET(CMAKE_EXE_LINKER_FLAGS "-framework CoreFoundation -framework Security")
#LINK_DIRECTORIES(/usr/lib)
project(c8tsender)
add_executable(c8tsender main.cpp chromecast.cpp playlist.cpp webserver.cpp jsoncpp/dist/jsoncpp.cpp cast_channel.pb.cc)
target_link_libraries(c8tsender ${PROTOBUF_LIBRARY} ${MICROHTTPD_LIBRARY} ${OPENSSL_LIBRARIES})
target_compile_features(c8tsender PRIVATE cxx_constexpr)
include_directories(/usr/include jsoncpp/dist ${OPENSSL_INCLUDE_DIR})
